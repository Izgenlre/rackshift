name: upload release asset

on:
  create:
    tag:
      - "v*"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Create Release File To Upload
        id: create_release_file
        env:
          RELEASE_VERSION: ${{github.ref}}
        run: |
          git clone https://github.com/rackshift/rackshift-installer.git
          cd rackshift-installer
          rm -rf docker .git
          cd ..
          chmod +x rackshift-installer/installer/install.sh
          version=`echo $RELEASE_VERSION | tr 'a-z' 'A-Z' | tr -d 'REFS/TAGS/'`
          filename=rackshift$version
          mv rackshift-installer $filename
          tar -czvf $filename.tar.gz $filename
          echo "::set-output name=VERSION::$(echo $version)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            # 快速开始
            仅需两步快速安装 RackShift：

             * 准备一台不小于 8 G内存且可以访问互联网的 64位 Linux 主机；
             * 以 root 用户执行如下命令一键安装 RackShift。
            ```sh
            curl -sSL https://github.com/rackshift/rackshift/releases/latest/download/quick_start.sh | sh
            ```

            产品文档
            点击 [完整文档](https://rackshift.github.io/rackshift-docs-static/) 查看完整的安装和使用文档
            离线安装包
            - 百度网盘下载链接: https://pan.baidu.com/s/1bUnEWsvARb8b2iN9u1cwig 提取码: jxh7

            # 新增功能
             - 裸金属可以批量执行开机/关机/重启/PXE操作
             - Centos/Redhat 支持多磁盘下 KS 的自动分区

            # 功能优化
            - 被动扫描发现的机器自动添加带外账号
            - 前端 Workflow 说明文案精简和国际化
            - 修改登陆失效时间为 1 小时
            - 物理机状态由带外账号密码是否配置以及当前状态决定
            - 删除数据和操作物理机时显示加载框
            - 修复发现结束时发现规则id被覆盖的问题

            # Bug 修复
            - 物理机关机状态时 PXE 重启失效的问题
            - 首次发现物理机后执行 PXE 重启主动发现后状态变更失败的问题
            - 修复使用 rsctl upgrade 升级会覆盖原配置参数的问题

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./rackshift${{ steps.create_release_file.outputs.VERSION }}.tar.gz
          asset_name: rackshift${{ steps.create_release_file.outputs.VERSION }}.tar.gz
          asset_content_type: application/zip

      - name: Upload Quick Start Script
        id: upload-release-quick-start-shell
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./rackshift${{ steps.create_release_file.outputs.VERSION }}/installer/quick_start.sh
          asset_name: quick_start.sh
          asset_content_type: application/text
