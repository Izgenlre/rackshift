<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.rackshift.mybatis.mapper.CpuMapper">
  <resultMap id="BaseResultMap" type="io.rackshift.mybatis.domain.Cpu">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="bare_metal_id" jdbcType="VARCHAR" property="bareMetalId" />
    <result column="proc_name" jdbcType="VARCHAR" property="procName" />
    <result column="proc_socket" jdbcType="VARCHAR" property="procSocket" />
    <result column="proc_status" jdbcType="VARCHAR" property="procStatus" />
    <result column="proc_speed" jdbcType="VARCHAR" property="procSpeed" />
    <result column="proc_num_cores_enabled" jdbcType="VARCHAR" property="procNumCoresEnabled" />
    <result column="proc_num_cores" jdbcType="VARCHAR" property="procNumCores" />
    <result column="proc_num_threads" jdbcType="VARCHAR" property="procNumThreads" />
    <result column="proc_mem_technology" jdbcType="VARCHAR" property="procMemTechnology" />
    <result column="proc_num_l1cache" jdbcType="VARCHAR" property="procNumL1cache" />
    <result column="proc_num_l2cache" jdbcType="VARCHAR" property="procNumL2cache" />
    <result column="proc_num_l3cache" jdbcType="VARCHAR" property="procNumL3cache" />
    <result column="sync_time" jdbcType="BIGINT" property="syncTime" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bare_metal_id, proc_name, proc_socket, proc_status, proc_speed, proc_num_cores_enabled, 
    proc_num_cores, proc_num_threads, proc_mem_technology, proc_num_l1cache, proc_num_l2cache, 
    proc_num_l3cache, sync_time, sn, status
  </sql>
  <select id="selectByExample" parameterType="io.rackshift.mybatis.domain.CpuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cpu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cpu
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from cpu
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.rackshift.mybatis.domain.CpuExample">
    delete from cpu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.rackshift.mybatis.domain.Cpu">
    insert into cpu (id, bare_metal_id, proc_name, 
      proc_socket, proc_status, proc_speed, 
      proc_num_cores_enabled, proc_num_cores, proc_num_threads, 
      proc_mem_technology, proc_num_l1cache, proc_num_l2cache, 
      proc_num_l3cache, sync_time, sn, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{bareMetalId,jdbcType=VARCHAR}, #{procName,jdbcType=VARCHAR}, 
      #{procSocket,jdbcType=VARCHAR}, #{procStatus,jdbcType=VARCHAR}, #{procSpeed,jdbcType=VARCHAR}, 
      #{procNumCoresEnabled,jdbcType=VARCHAR}, #{procNumCores,jdbcType=VARCHAR}, #{procNumThreads,jdbcType=VARCHAR}, 
      #{procMemTechnology,jdbcType=VARCHAR}, #{procNumL1cache,jdbcType=VARCHAR}, #{procNumL2cache,jdbcType=VARCHAR}, 
      #{procNumL3cache,jdbcType=VARCHAR}, #{syncTime,jdbcType=BIGINT}, #{sn,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="io.rackshift.mybatis.domain.Cpu">
    insert into cpu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bareMetalId != null">
        bare_metal_id,
      </if>
      <if test="procName != null">
        proc_name,
      </if>
      <if test="procSocket != null">
        proc_socket,
      </if>
      <if test="procStatus != null">
        proc_status,
      </if>
      <if test="procSpeed != null">
        proc_speed,
      </if>
      <if test="procNumCoresEnabled != null">
        proc_num_cores_enabled,
      </if>
      <if test="procNumCores != null">
        proc_num_cores,
      </if>
      <if test="procNumThreads != null">
        proc_num_threads,
      </if>
      <if test="procMemTechnology != null">
        proc_mem_technology,
      </if>
      <if test="procNumL1cache != null">
        proc_num_l1cache,
      </if>
      <if test="procNumL2cache != null">
        proc_num_l2cache,
      </if>
      <if test="procNumL3cache != null">
        proc_num_l3cache,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bareMetalId != null">
        #{bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="procName != null">
        #{procName,jdbcType=VARCHAR},
      </if>
      <if test="procSocket != null">
        #{procSocket,jdbcType=VARCHAR},
      </if>
      <if test="procStatus != null">
        #{procStatus,jdbcType=VARCHAR},
      </if>
      <if test="procSpeed != null">
        #{procSpeed,jdbcType=VARCHAR},
      </if>
      <if test="procNumCoresEnabled != null">
        #{procNumCoresEnabled,jdbcType=VARCHAR},
      </if>
      <if test="procNumCores != null">
        #{procNumCores,jdbcType=VARCHAR},
      </if>
      <if test="procNumThreads != null">
        #{procNumThreads,jdbcType=VARCHAR},
      </if>
      <if test="procMemTechnology != null">
        #{procMemTechnology,jdbcType=VARCHAR},
      </if>
      <if test="procNumL1cache != null">
        #{procNumL1cache,jdbcType=VARCHAR},
      </if>
      <if test="procNumL2cache != null">
        #{procNumL2cache,jdbcType=VARCHAR},
      </if>
      <if test="procNumL3cache != null">
        #{procNumL3cache,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=BIGINT},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.rackshift.mybatis.domain.CpuExample" resultType="java.lang.Long">
    select count(*) from cpu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cpu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bareMetalId != null">
        bare_metal_id = #{record.bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="record.procName != null">
        proc_name = #{record.procName,jdbcType=VARCHAR},
      </if>
      <if test="record.procSocket != null">
        proc_socket = #{record.procSocket,jdbcType=VARCHAR},
      </if>
      <if test="record.procStatus != null">
        proc_status = #{record.procStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.procSpeed != null">
        proc_speed = #{record.procSpeed,jdbcType=VARCHAR},
      </if>
      <if test="record.procNumCoresEnabled != null">
        proc_num_cores_enabled = #{record.procNumCoresEnabled,jdbcType=VARCHAR},
      </if>
      <if test="record.procNumCores != null">
        proc_num_cores = #{record.procNumCores,jdbcType=VARCHAR},
      </if>
      <if test="record.procNumThreads != null">
        proc_num_threads = #{record.procNumThreads,jdbcType=VARCHAR},
      </if>
      <if test="record.procMemTechnology != null">
        proc_mem_technology = #{record.procMemTechnology,jdbcType=VARCHAR},
      </if>
      <if test="record.procNumL1cache != null">
        proc_num_l1cache = #{record.procNumL1cache,jdbcType=VARCHAR},
      </if>
      <if test="record.procNumL2cache != null">
        proc_num_l2cache = #{record.procNumL2cache,jdbcType=VARCHAR},
      </if>
      <if test="record.procNumL3cache != null">
        proc_num_l3cache = #{record.procNumL3cache,jdbcType=VARCHAR},
      </if>
      <if test="record.syncTime != null">
        sync_time = #{record.syncTime,jdbcType=BIGINT},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cpu
    set id = #{record.id,jdbcType=VARCHAR},
      bare_metal_id = #{record.bareMetalId,jdbcType=VARCHAR},
      proc_name = #{record.procName,jdbcType=VARCHAR},
      proc_socket = #{record.procSocket,jdbcType=VARCHAR},
      proc_status = #{record.procStatus,jdbcType=VARCHAR},
      proc_speed = #{record.procSpeed,jdbcType=VARCHAR},
      proc_num_cores_enabled = #{record.procNumCoresEnabled,jdbcType=VARCHAR},
      proc_num_cores = #{record.procNumCores,jdbcType=VARCHAR},
      proc_num_threads = #{record.procNumThreads,jdbcType=VARCHAR},
      proc_mem_technology = #{record.procMemTechnology,jdbcType=VARCHAR},
      proc_num_l1cache = #{record.procNumL1cache,jdbcType=VARCHAR},
      proc_num_l2cache = #{record.procNumL2cache,jdbcType=VARCHAR},
      proc_num_l3cache = #{record.procNumL3cache,jdbcType=VARCHAR},
      sync_time = #{record.syncTime,jdbcType=BIGINT},
      sn = #{record.sn,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.rackshift.mybatis.domain.Cpu">
    update cpu
    <set>
      <if test="bareMetalId != null">
        bare_metal_id = #{bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="procName != null">
        proc_name = #{procName,jdbcType=VARCHAR},
      </if>
      <if test="procSocket != null">
        proc_socket = #{procSocket,jdbcType=VARCHAR},
      </if>
      <if test="procStatus != null">
        proc_status = #{procStatus,jdbcType=VARCHAR},
      </if>
      <if test="procSpeed != null">
        proc_speed = #{procSpeed,jdbcType=VARCHAR},
      </if>
      <if test="procNumCoresEnabled != null">
        proc_num_cores_enabled = #{procNumCoresEnabled,jdbcType=VARCHAR},
      </if>
      <if test="procNumCores != null">
        proc_num_cores = #{procNumCores,jdbcType=VARCHAR},
      </if>
      <if test="procNumThreads != null">
        proc_num_threads = #{procNumThreads,jdbcType=VARCHAR},
      </if>
      <if test="procMemTechnology != null">
        proc_mem_technology = #{procMemTechnology,jdbcType=VARCHAR},
      </if>
      <if test="procNumL1cache != null">
        proc_num_l1cache = #{procNumL1cache,jdbcType=VARCHAR},
      </if>
      <if test="procNumL2cache != null">
        proc_num_l2cache = #{procNumL2cache,jdbcType=VARCHAR},
      </if>
      <if test="procNumL3cache != null">
        proc_num_l3cache = #{procNumL3cache,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=BIGINT},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.rackshift.mybatis.domain.Cpu">
    update cpu
    set bare_metal_id = #{bareMetalId,jdbcType=VARCHAR},
      proc_name = #{procName,jdbcType=VARCHAR},
      proc_socket = #{procSocket,jdbcType=VARCHAR},
      proc_status = #{procStatus,jdbcType=VARCHAR},
      proc_speed = #{procSpeed,jdbcType=VARCHAR},
      proc_num_cores_enabled = #{procNumCoresEnabled,jdbcType=VARCHAR},
      proc_num_cores = #{procNumCores,jdbcType=VARCHAR},
      proc_num_threads = #{procNumThreads,jdbcType=VARCHAR},
      proc_mem_technology = #{procMemTechnology,jdbcType=VARCHAR},
      proc_num_l1cache = #{procNumL1cache,jdbcType=VARCHAR},
      proc_num_l2cache = #{procNumL2cache,jdbcType=VARCHAR},
      proc_num_l3cache = #{procNumL3cache,jdbcType=VARCHAR},
      sync_time = #{syncTime,jdbcType=BIGINT},
      sn = #{sn,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>