<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.rackshift.mybatis.mapper.DiskMapper">
  <resultMap id="BaseResultMap" type="io.rackshift.mybatis.domain.Disk">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="bare_metal_id" jdbcType="VARCHAR" property="bareMetalId" />
    <result column="enclosure_id" jdbcType="INTEGER" property="enclosureId" />
    <result column="controller_id" jdbcType="INTEGER" property="controllerId" />
    <result column="drive" jdbcType="VARCHAR" property="drive" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="raid" jdbcType="VARCHAR" property="raid" />
    <result column="virtual_disk" jdbcType="VARCHAR" property="virtualDisk" />
    <result column="manufactor" jdbcType="VARCHAR" property="manufactor" />
    <result column="sync_time" jdbcType="BIGINT" property="syncTime" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bare_metal_id, enclosure_id, controller_id, drive, type, size, raid, virtual_disk, 
    manufactor, sync_time, sn, model, status
  </sql>
  <select id="selectByExample" parameterType="io.rackshift.mybatis.domain.DiskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from disk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from disk
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from disk
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.rackshift.mybatis.domain.DiskExample">
    delete from disk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.rackshift.mybatis.domain.Disk">
    insert into disk (id, bare_metal_id, enclosure_id, 
      controller_id, drive, type, 
      size, raid, virtual_disk, 
      manufactor, sync_time, sn, 
      model, status)
    values (#{id,jdbcType=VARCHAR}, #{bareMetalId,jdbcType=VARCHAR}, #{enclosureId,jdbcType=INTEGER}, 
      #{controllerId,jdbcType=INTEGER}, #{drive,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, 
      #{size,jdbcType=VARCHAR}, #{raid,jdbcType=VARCHAR}, #{virtualDisk,jdbcType=VARCHAR}, 
      #{manufactor,jdbcType=VARCHAR}, #{syncTime,jdbcType=BIGINT}, #{sn,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="io.rackshift.mybatis.domain.Disk">
    insert into disk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bareMetalId != null">
        bare_metal_id,
      </if>
      <if test="enclosureId != null">
        enclosure_id,
      </if>
      <if test="controllerId != null">
        controller_id,
      </if>
      <if test="drive != null">
        drive,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="raid != null">
        raid,
      </if>
      <if test="virtualDisk != null">
        virtual_disk,
      </if>
      <if test="manufactor != null">
        manufactor,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bareMetalId != null">
        #{bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="enclosureId != null">
        #{enclosureId,jdbcType=INTEGER},
      </if>
      <if test="controllerId != null">
        #{controllerId,jdbcType=INTEGER},
      </if>
      <if test="drive != null">
        #{drive,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="raid != null">
        #{raid,jdbcType=VARCHAR},
      </if>
      <if test="virtualDisk != null">
        #{virtualDisk,jdbcType=VARCHAR},
      </if>
      <if test="manufactor != null">
        #{manufactor,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=BIGINT},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.rackshift.mybatis.domain.DiskExample" resultType="java.lang.Long">
    select count(*) from disk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update disk
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bareMetalId != null">
        bare_metal_id = #{record.bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="record.enclosureId != null">
        enclosure_id = #{record.enclosureId,jdbcType=INTEGER},
      </if>
      <if test="record.controllerId != null">
        controller_id = #{record.controllerId,jdbcType=INTEGER},
      </if>
      <if test="record.drive != null">
        drive = #{record.drive,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.raid != null">
        raid = #{record.raid,jdbcType=VARCHAR},
      </if>
      <if test="record.virtualDisk != null">
        virtual_disk = #{record.virtualDisk,jdbcType=VARCHAR},
      </if>
      <if test="record.manufactor != null">
        manufactor = #{record.manufactor,jdbcType=VARCHAR},
      </if>
      <if test="record.syncTime != null">
        sync_time = #{record.syncTime,jdbcType=BIGINT},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update disk
    set id = #{record.id,jdbcType=VARCHAR},
      bare_metal_id = #{record.bareMetalId,jdbcType=VARCHAR},
      enclosure_id = #{record.enclosureId,jdbcType=INTEGER},
      controller_id = #{record.controllerId,jdbcType=INTEGER},
      drive = #{record.drive,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      size = #{record.size,jdbcType=VARCHAR},
      raid = #{record.raid,jdbcType=VARCHAR},
      virtual_disk = #{record.virtualDisk,jdbcType=VARCHAR},
      manufactor = #{record.manufactor,jdbcType=VARCHAR},
      sync_time = #{record.syncTime,jdbcType=BIGINT},
      sn = #{record.sn,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.rackshift.mybatis.domain.Disk">
    update disk
    <set>
      <if test="bareMetalId != null">
        bare_metal_id = #{bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="enclosureId != null">
        enclosure_id = #{enclosureId,jdbcType=INTEGER},
      </if>
      <if test="controllerId != null">
        controller_id = #{controllerId,jdbcType=INTEGER},
      </if>
      <if test="drive != null">
        drive = #{drive,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="raid != null">
        raid = #{raid,jdbcType=VARCHAR},
      </if>
      <if test="virtualDisk != null">
        virtual_disk = #{virtualDisk,jdbcType=VARCHAR},
      </if>
      <if test="manufactor != null">
        manufactor = #{manufactor,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=BIGINT},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.rackshift.mybatis.domain.Disk">
    update disk
    set bare_metal_id = #{bareMetalId,jdbcType=VARCHAR},
      enclosure_id = #{enclosureId,jdbcType=INTEGER},
      controller_id = #{controllerId,jdbcType=INTEGER},
      drive = #{drive,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      size = #{size,jdbcType=VARCHAR},
      raid = #{raid,jdbcType=VARCHAR},
      virtual_disk = #{virtualDisk,jdbcType=VARCHAR},
      manufactor = #{manufactor,jdbcType=VARCHAR},
      sync_time = #{syncTime,jdbcType=BIGINT},
      sn = #{sn,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>