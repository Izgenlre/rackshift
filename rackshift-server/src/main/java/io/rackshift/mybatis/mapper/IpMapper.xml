<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.rackshift.mybatis.mapper.IpMapper">
  <resultMap id="BaseResultMap" type="io.rackshift.mybatis.domain.Ip">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="mask" jdbcType="VARCHAR" property="mask" />
    <result column="gateway" jdbcType="VARCHAR" property="gateway" />
    <result column="dns1" jdbcType="VARCHAR" property="dns1" />
    <result column="dns2" jdbcType="VARCHAR" property="dns2" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="network_id" jdbcType="VARCHAR" property="networkId" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
    <result column="resource_id" jdbcType="VARCHAR" property="resourceId" />
    <result column="order_item_id" jdbcType="VARCHAR" property="orderItemId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ip, mask, gateway, dns1, dns2, region, network_id, resource_type, resource_id, 
    order_item_id, status
  </sql>
  <select id="selectByExample" parameterType="io.rackshift.mybatis.domain.IpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ip
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ip
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.rackshift.mybatis.domain.IpExample">
    delete from ip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.rackshift.mybatis.domain.Ip">
    insert into ip (id, ip, mask, 
      gateway, dns1, dns2, 
      region, network_id, resource_type, 
      resource_id, order_item_id, status
      )
    values (#{id,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{mask,jdbcType=VARCHAR}, 
      #{gateway,jdbcType=VARCHAR}, #{dns1,jdbcType=VARCHAR}, #{dns2,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{networkId,jdbcType=VARCHAR}, #{resourceType,jdbcType=VARCHAR}, 
      #{resourceId,jdbcType=VARCHAR}, #{orderItemId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.rackshift.mybatis.domain.Ip">
    insert into ip
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="mask != null">
        mask,
      </if>
      <if test="gateway != null">
        gateway,
      </if>
      <if test="dns1 != null">
        dns1,
      </if>
      <if test="dns2 != null">
        dns2,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="networkId != null">
        network_id,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="orderItemId != null">
        order_item_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="mask != null">
        #{mask,jdbcType=VARCHAR},
      </if>
      <if test="gateway != null">
        #{gateway,jdbcType=VARCHAR},
      </if>
      <if test="dns1 != null">
        #{dns1,jdbcType=VARCHAR},
      </if>
      <if test="dns2 != null">
        #{dns2,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="networkId != null">
        #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="orderItemId != null">
        #{orderItemId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.rackshift.mybatis.domain.IpExample" resultType="java.lang.Long">
    select count(*) from ip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ip
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.mask != null">
        mask = #{record.mask,jdbcType=VARCHAR},
      </if>
      <if test="record.gateway != null">
        gateway = #{record.gateway,jdbcType=VARCHAR},
      </if>
      <if test="record.dns1 != null">
        dns1 = #{record.dns1,jdbcType=VARCHAR},
      </if>
      <if test="record.dns2 != null">
        dns2 = #{record.dns2,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.networkId != null">
        network_id = #{record.networkId,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceType != null">
        resource_type = #{record.resourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceId != null">
        resource_id = #{record.resourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderItemId != null">
        order_item_id = #{record.orderItemId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ip
    set id = #{record.id,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      mask = #{record.mask,jdbcType=VARCHAR},
      gateway = #{record.gateway,jdbcType=VARCHAR},
      dns1 = #{record.dns1,jdbcType=VARCHAR},
      dns2 = #{record.dns2,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      network_id = #{record.networkId,jdbcType=VARCHAR},
      resource_type = #{record.resourceType,jdbcType=VARCHAR},
      resource_id = #{record.resourceId,jdbcType=VARCHAR},
      order_item_id = #{record.orderItemId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.rackshift.mybatis.domain.Ip">
    update ip
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="mask != null">
        mask = #{mask,jdbcType=VARCHAR},
      </if>
      <if test="gateway != null">
        gateway = #{gateway,jdbcType=VARCHAR},
      </if>
      <if test="dns1 != null">
        dns1 = #{dns1,jdbcType=VARCHAR},
      </if>
      <if test="dns2 != null">
        dns2 = #{dns2,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="networkId != null">
        network_id = #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="orderItemId != null">
        order_item_id = #{orderItemId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.rackshift.mybatis.domain.Ip">
    update ip
    set ip = #{ip,jdbcType=VARCHAR},
      mask = #{mask,jdbcType=VARCHAR},
      gateway = #{gateway,jdbcType=VARCHAR},
      dns1 = #{dns1,jdbcType=VARCHAR},
      dns2 = #{dns2,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      network_id = #{networkId,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=VARCHAR},
      order_item_id = #{orderItemId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>