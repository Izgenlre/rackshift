<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.rackshift.mybatis.mapper.NetworkCardMapper">
  <resultMap id="BaseResultMap" type="io.rackshift.mybatis.domain.NetworkCard">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="vlan_id" jdbcType="VARCHAR" property="vlanId" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="bare_metal_id" jdbcType="VARCHAR" property="bareMetalId" />
    <result column="mac" jdbcType="VARCHAR" property="mac" />
    <result column="sync_time" jdbcType="BIGINT" property="syncTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vlan_id, ip, number, bare_metal_id, mac, sync_time
  </sql>
  <select id="selectByExample" parameterType="io.rackshift.mybatis.domain.NetworkCardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from network_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from network_card
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from network_card
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.rackshift.mybatis.domain.NetworkCardExample">
    delete from network_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.rackshift.mybatis.domain.NetworkCard">
    insert into network_card (id, vlan_id, ip, 
      number, bare_metal_id, mac, 
      sync_time)
    values (#{id,jdbcType=VARCHAR}, #{vlanId,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{bareMetalId,jdbcType=VARCHAR}, #{mac,jdbcType=VARCHAR}, 
      #{syncTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="io.rackshift.mybatis.domain.NetworkCard">
    insert into network_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vlanId != null">
        vlan_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="bareMetalId != null">
        bare_metal_id,
      </if>
      <if test="mac != null">
        mac,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="vlanId != null">
        #{vlanId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="bareMetalId != null">
        #{bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.rackshift.mybatis.domain.NetworkCardExample" resultType="java.lang.Long">
    select count(*) from network_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update network_card
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.vlanId != null">
        vlan_id = #{record.vlanId,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.bareMetalId != null">
        bare_metal_id = #{record.bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="record.mac != null">
        mac = #{record.mac,jdbcType=VARCHAR},
      </if>
      <if test="record.syncTime != null">
        sync_time = #{record.syncTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update network_card
    set id = #{record.id,jdbcType=VARCHAR},
      vlan_id = #{record.vlanId,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      bare_metal_id = #{record.bareMetalId,jdbcType=VARCHAR},
      mac = #{record.mac,jdbcType=VARCHAR},
      sync_time = #{record.syncTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.rackshift.mybatis.domain.NetworkCard">
    update network_card
    <set>
      <if test="vlanId != null">
        vlan_id = #{vlanId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="bareMetalId != null">
        bare_metal_id = #{bareMetalId,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        mac = #{mac,jdbcType=VARCHAR},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.rackshift.mybatis.domain.NetworkCard">
    update network_card
    set vlan_id = #{vlanId,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      bare_metal_id = #{bareMetalId,jdbcType=VARCHAR},
      mac = #{mac,jdbcType=VARCHAR},
      sync_time = #{syncTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>