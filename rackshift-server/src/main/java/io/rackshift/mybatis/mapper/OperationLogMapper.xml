<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.rackshift.mybatis.mapper.OperationLogMapper">
  <resultMap id="BaseResultMap" type="io.rackshift.mybatis.domain.OperationLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="workspace_id" jdbcType="VARCHAR" property="workspaceId" />
    <result column="workspace_name" jdbcType="VARCHAR" property="workspaceName" />
    <result column="resource_user_id" jdbcType="VARCHAR" property="resourceUserId" />
    <result column="resource_user_name" jdbcType="VARCHAR" property="resourceUserName" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
    <result column="resource_id" jdbcType="VARCHAR" property="resourceId" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="module" jdbcType="VARCHAR" property="module" />
    <result column="source_ip" jdbcType="VARCHAR" property="sourceIp" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.rackshift.mybatis.domain.OperationLog">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, workspace_id, workspace_name, resource_user_id, resource_user_name, resource_type, 
    resource_id, resource_name, operation, time, module, source_ip
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.rackshift.mybatis.domain.OperationLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.rackshift.mybatis.domain.OperationLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from operation_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from operation_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.rackshift.mybatis.domain.OperationLogExample">
    delete from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.rackshift.mybatis.domain.OperationLog">
    insert into operation_log (id, workspace_id, workspace_name, 
      resource_user_id, resource_user_name, resource_type, 
      resource_id, resource_name, operation, 
      time, module, source_ip, 
      message)
    values (#{id,jdbcType=VARCHAR}, #{workspaceId,jdbcType=VARCHAR}, #{workspaceName,jdbcType=VARCHAR}, 
      #{resourceUserId,jdbcType=VARCHAR}, #{resourceUserName,jdbcType=VARCHAR}, #{resourceType,jdbcType=VARCHAR}, 
      #{resourceId,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, 
      #{time,jdbcType=BIGINT}, #{module,jdbcType=VARCHAR}, #{sourceIp,jdbcType=VARCHAR}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.rackshift.mybatis.domain.OperationLog">
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workspaceId != null">
        workspace_id,
      </if>
      <if test="workspaceName != null">
        workspace_name,
      </if>
      <if test="resourceUserId != null">
        resource_user_id,
      </if>
      <if test="resourceUserName != null">
        resource_user_name,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="resourceName != null">
        resource_name,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="module != null">
        module,
      </if>
      <if test="sourceIp != null">
        source_ip,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workspaceId != null">
        #{workspaceId,jdbcType=VARCHAR},
      </if>
      <if test="workspaceName != null">
        #{workspaceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUserId != null">
        #{resourceUserId,jdbcType=VARCHAR},
      </if>
      <if test="resourceUserName != null">
        #{resourceUserName,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null">
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="module != null">
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null">
        #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.rackshift.mybatis.domain.OperationLogExample" resultType="java.lang.Long">
    select count(*) from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operation_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.workspaceId != null">
        workspace_id = #{record.workspaceId,jdbcType=VARCHAR},
      </if>
      <if test="record.workspaceName != null">
        workspace_name = #{record.workspaceName,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceUserId != null">
        resource_user_id = #{record.resourceUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceUserName != null">
        resource_user_name = #{record.resourceUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceType != null">
        resource_type = #{record.resourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceId != null">
        resource_id = #{record.resourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceName != null">
        resource_name = #{record.resourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.operation != null">
        operation = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.module != null">
        module = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceIp != null">
        source_ip = #{record.sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update operation_log
    set id = #{record.id,jdbcType=VARCHAR},
      workspace_id = #{record.workspaceId,jdbcType=VARCHAR},
      workspace_name = #{record.workspaceName,jdbcType=VARCHAR},
      resource_user_id = #{record.resourceUserId,jdbcType=VARCHAR},
      resource_user_name = #{record.resourceUserName,jdbcType=VARCHAR},
      resource_type = #{record.resourceType,jdbcType=VARCHAR},
      resource_id = #{record.resourceId,jdbcType=VARCHAR},
      resource_name = #{record.resourceName,jdbcType=VARCHAR},
      operation = #{record.operation,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      module = #{record.module,jdbcType=VARCHAR},
      source_ip = #{record.sourceIp,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operation_log
    set id = #{record.id,jdbcType=VARCHAR},
      workspace_id = #{record.workspaceId,jdbcType=VARCHAR},
      workspace_name = #{record.workspaceName,jdbcType=VARCHAR},
      resource_user_id = #{record.resourceUserId,jdbcType=VARCHAR},
      resource_user_name = #{record.resourceUserName,jdbcType=VARCHAR},
      resource_type = #{record.resourceType,jdbcType=VARCHAR},
      resource_id = #{record.resourceId,jdbcType=VARCHAR},
      resource_name = #{record.resourceName,jdbcType=VARCHAR},
      operation = #{record.operation,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      module = #{record.module,jdbcType=VARCHAR},
      source_ip = #{record.sourceIp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.rackshift.mybatis.domain.OperationLog">
    update operation_log
    <set>
      <if test="workspaceId != null">
        workspace_id = #{workspaceId,jdbcType=VARCHAR},
      </if>
      <if test="workspaceName != null">
        workspace_name = #{workspaceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUserId != null">
        resource_user_id = #{resourceUserId,jdbcType=VARCHAR},
      </if>
      <if test="resourceUserName != null">
        resource_user_name = #{resourceUserName,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="module != null">
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="sourceIp != null">
        source_ip = #{sourceIp,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.rackshift.mybatis.domain.OperationLog">
    update operation_log
    set workspace_id = #{workspaceId,jdbcType=VARCHAR},
      workspace_name = #{workspaceName,jdbcType=VARCHAR},
      resource_user_id = #{resourceUserId,jdbcType=VARCHAR},
      resource_user_name = #{resourceUserName,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=VARCHAR},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      module = #{module,jdbcType=VARCHAR},
      source_ip = #{sourceIp,jdbcType=VARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.rackshift.mybatis.domain.OperationLog">
    update operation_log
    set workspace_id = #{workspaceId,jdbcType=VARCHAR},
      workspace_name = #{workspaceName,jdbcType=VARCHAR},
      resource_user_id = #{resourceUserId,jdbcType=VARCHAR},
      resource_user_name = #{resourceUserName,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=VARCHAR},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      module = #{module,jdbcType=VARCHAR},
      source_ip = #{sourceIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>