insert into template
values (uuid(), 'set_bmc_credentials.sh',
        '#!/bin/bash\n############################\n# Author: Peter.Pan@emc.com\n#############################\n\n# Check Root privillage\nif [[ $EUID -ne 0 ]]; then\n   echo \"[Error]This script must be run as root\"\n   exit -1\nfi\n\n\nnr=0\ndeclare -a disk_array\n\n\nsmartctl --scan | while read line\ndo\n\n    #########################################\n    # smartctl --scan ( version 6.1) output as below\n    #\n    #\n    #/dev/sda -d scsi # /dev/sda, SCSI device\n    #/dev/sdb -d scsi # /dev/sdb, SCSI device\n    #/dev/sdc -d scsi # /dev/sdc, SCSI device\n    #/dev/sdd -d scsi # /dev/sdd, SCSI device\n    #/dev/bus/10 -d megaraid,8 # /dev/bus/10 [megaraid_disk_08], SCSI device\n    #/dev/bus/10 -d megaraid,9 # /dev/bus/10 [megaraid_disk_09], SCSI device\n    #/dev/bus/10 -d megaraid,13 # /dev/bus/10 [megaraid_disk_13], SCSI device\n    #/dev/bus/10 -d megaraid,14 # /dev/bus/10 [megaraid_disk_14], SCSI device\n    #########################################\n\n\n    # save the first column --  the device\n    my_dev=$(echo $line |awk ''\{print $1 \}'')\n\n    # save the 3rd column  -- the device-type\n    # \"-d\" type will be : ata, scsi, sat[,auto][,N][+TYPE], usbcypress[,X], usbjmicron[,p][,x][,N], usbsunplus, marvell, areca,N/E, 3ware,N, hpt,L/M/N, megaraid,N, cciss,N, auto, test <=======\n    my_type=$(echo $line |awk ''\{print $3 \}'')\n\n\n    type_param=$my_type\n    # we want to get all SMART data, instead of scsi only , for sat only.\n    if [ \"$my_type\"_ == \"ata\"_ ] || [ \"$my_type\"_ == \"scsi\"_ ] || [ \"$my_type\"_ == \"sat\"_ ] ; then\n        type_param=''auto''\n    fi\n\n    echo \"####\"\"$my_dev \"\"$my_type\" # this is an \"index\" for script parser, \"####\" is used to indicates the start of a devices\n\n    # execute the SMART tool to retrieve SMART for this device\n    my_smart=$( smartctl -a -d $type_param    $my_dev )\n\n    # check SN, to reduce the duplicated lines (example, the /dev/sdc may be duplicated as megaraid,8, if it''s a \"JBOD\" connection to RAID )\n\n    my_SN=$( echo \"$my_smart\" |grep Serial|awk ''\{print $3\}'')  # NOTE, the quote for \"$var\" is important, to keep the newline in $var variable\n    my_Vendor=$( echo \"$my_smart\" |grep Vendor|awk ''\{print $3\}'')\n\n    is_duplicate=$(  echo \"$\{disk_array[@]\}\" | grep -w \"$my_SN\"  );\n\n    if [ \"my_SN\"_  !=  \"\"_ ] && [ $is_duplicate ] ; then\n        echo \"[Debug] duplicated disk item, skip this item\"\n        continue;\n    else\n        echo \"$my_smart\"\n\n        disk_array[$nr]=\"$my_SN\"\n        nr=$(($nr+1))\n\n        #####################################\n        # Adding controller information\n        #\n        # Added by Ted.Chen@emc.com\n        #\n        # Controller information including:\n        #     controller_name - Example: LSI Logic / Symbios Logic MegaRAID SAS-3 3108 [Invader] (rev 02).\n        #     controller_PCI_BDF: The PCIe domain:bus:device.function ID of the SAS controller.\n        #     host_ID - The scsi host ID read from /sys/class/scsi_host/hostx\n        ####################################\n\n        is_megaraid=$(  echo \"$\{my_type\}\" | grep -w \"megaraid\" );\n\n        if [ $is_megaraid ] ; then \t\t\t# Seeking for HDDs with megaraid type\n            # $line example :\n            #   $line = /dev/bus/0 -d megaraid,1 # /dev/bus/0 [megaraid_disk_01], SCSI device\n            my_ctrl_num=$( echo \"$line\" | awk ''\{print $1\}'' | awk -F / ''\{print $4\}'');    #The host ID\n        else # HDDs other than megaraid type\n            # example :\n            #   $line = /dev/sda -d scsi # /dev/sda, SCSI device''\n            my_disk_name=$( echo \"$line\" | awk ''\{print $1\}'');    #The disk name, ie. /dev/sda\n            # example of lsscsi output: [10:0:0:0]   disk    ATA      SATADOM-SV 3SE   710   /dev/sda\n            my_ctrl_num=$(lsscsi | grep $my_disk_name | awk -F : ''\{print $1\}'' | awk -F [ ''\{print $2\}'' );\n        fi\n\n        # example of output of readlink:\n        # : ../../devices/pci0000:00/0000:00:03.2/0000:07:00.0/host0/scsi_host/host0\n        # or: ../../devices/pci0000:00/0000:00:11.4/ata1/host1/scsi_host/host1\n        my_ctrl_bdf=$(readlink /sys/class/scsi_host/host$my_ctrl_num | grep -o ''[0-9a-z]\\+:[0-9a-z]\\+:[0-9a-z]\\+.[0-9a-z]\\+'' | tail -n 1);\n        my_ctrl_name=$(lspci -s $my_ctrl_bdf | awk -F : ''\{print $3\}'');\n\n        echo \"###\"\"HBA Controller Information for $my_dev $my_type\";\n        echo \"controller_name=\"\"$my_ctrl_name\";\n        echo \"controller_PCI_BDF=\"\"$my_ctrl_bdf\";\n        echo \"host_ID=\"\"$my_ctrl_num\";\n        continue;\n    fi\n\ndone\n',
        'system', 1629698788504, 1629698788504);

insert into system_parameter
values ('bmc_credentials', 'true', 'text', null);
insert into system_parameter
values ('bmc_username', 'rackshift', 'text', null);
insert into system_parameter
values ('bmc_password', 'rackshift', 'text', null);